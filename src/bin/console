#!/usr/bin/env php
<?php

require __DIR__ . '/../vendor/autoload.php';

// Fix PATH problems
chdir(dirname(__DIR__));

$console = new \Symfony\Component\Console\Application();
$conf    = require 'config/application.config.php';

$app     = Laminas\Mvc\Application::init($conf);


$commands = [];
// On parse automatiquement le dossier des commandes
$modules = $conf['modules'];


function scanCommandFiles($modules): array
{
    $path = __DIR__ . '/../module';
    global $app;
    $result = [];
    foreach ($modules as $module) {
        $dir = $modulePath = __DIR__ . '/../module/' . $module . '/src/Command';
        if (is_dir($dir)) {
            global $app;
            $output = [];
            $re     = '/.*Command\.php/m';
            $scan   = scandir($dir);
            foreach ($scan as $key => $value) {
                if (!in_array($value, ['.', '..'])) {
                    if (preg_match($re, $value, $matches)) {
                        $class     = substr($value, 0, strlen($value) - 4);
                        try {
                            $reflector = new ReflectionClass(
                                $module . '\Command\\' . $class
                            );
                            if ($reflector->isSubclassOf(\Symfony\Component\Console\Command\Command::class)) {
                                $result[] = $reflector->newInstanceArgs([$app->getServiceManager()]);
                            }
                        } catch (ReflectionException $e) {
                            echo $e->getMessage(). PHP_EOL;
                        }
                    }
                }
            }
        }
    }

    return $result;
}

$commands = scanCommandFiles($modules);
$console->addCommands($commands);

$console->run();
